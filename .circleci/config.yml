version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.3-node
        environment:
          DATABASE_URL: "postgres://root:password@localhost/github-api_test"
          RAILS_ENV: test
      - image: circleci/postgres:9.6.4
        POSTGRES_USER: root
        POSTGRES_DB: github-api_test
        POSTGRES_PASSWORD: "password"
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install bundler
          command: gem install bundler:2.0.2
      - run:
          name: Install dependencies
          command: |
            bundle install --path vendor
            [ -f ./vendor/dockerize ] || (wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C ./vendor -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz)
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - save_cache:
          paths:
            - .bundle
            - ./vendor
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - run:
          name: Wait for db
          command: ./vendor/dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bin/rails db:create db:test:prepare
      - run:
          name: Run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format doc \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  production:
    docker:
      - image: circleci/ruby:2.6.3-node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            gem install dpl
      - run:
          name: Deploy to production
          command: |
            dpl --provider=heroku --app=ksm-github-api --api-key=$HEROKU_API_KEY

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            tags:
              ignore: /.*/
  release:
    jobs:
      - production:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.+/
